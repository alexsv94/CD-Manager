<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Color Theme-->
    <SolidColorBrush x:Key="Color.Primary" Color="#222c32" />
    <SolidColorBrush x:Key="Color.Accent" Color="#1e262b" />
    <SolidColorBrush x:Key="Color.Secondary" Color="#2b343a" />   
    
    
    <SolidColorBrush x:Key="Color.Text.Primary" Color="#b5b8ba" />
    <SolidColorBrush x:Key="Color.Text.Secondary" Color="#dedfe1" />
    <SolidColorBrush x:Key="Color.Text.Secondary1" Color="#aaaeb0" />    
    <SolidColorBrush x:Key="Color.Button.Default" Color="#d8dada" />
    
    <SolidColorBrush x:Key="Color.Button.MouseOver" Color="#ffdada" />
    <SolidColorBrush x:Key="Color.Button.Pressed" Color="#7aa8ae" />
    <SolidColorBrush x:Key="Color.Button.Disabled" Color="#00dada" />
    <SolidColorBrush x:Key="Color.Button.Foreground" Color="#333333" />
    
    <!--Font Settings-->
    <sys:Double x:Key="Font.FontSize">14</sys:Double>

    <Style x:Key="WindowBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{DynamicResource Color.Primary}" />
    </Style>

    <Style x:Key="WindowTitleBar" TargetType="Border">
        <Setter Property="CornerRadius" Value="5,5,0,0" />
        <Setter Property="Background" Value="{DynamicResource Color.Accent}" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="3" Direction="270" Opacity="0.3" ShadowDepth="2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Text_Main" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Color.Text.Primary}" />
    </Style>

    <Style x:Key="Text_Sub" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource Color.Text.Secondary}" />
    </Style>
    
    
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               StrokeDashArray="1 2" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                               SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#d8dada"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ffdada"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#7aa8ae"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#00837a"/>
    
    <Style x:Key="SCButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Color.Button.Foreground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5" SnapsToDevicePixels="true">
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>